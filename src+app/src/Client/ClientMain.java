/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author TUNG
 */
//----------------------------VIEW-----------------------------------------
import java.net.ServerSocket;
import java.net.Socket;
import java.net.InetAddress;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
    
public class ClientMain extends javax.swing.JFrame {
    
    /**
     * Creates new form ClientMain
     */
    Client client;
    Login login;
    DataInputStream receive;
    DataOutputStream send;
    boolean run;
    ClientMain(Client client, Login login) {
        this.client = client;
        this.login = login;
        this.client.main = ClientMain.this;
        try{
            this.receive = new DataInputStream(this.client.socket.getInputStream());
            this.send = new DataOutputStream(this.client.socket.getOutputStream());
        }catch(Exception e){
            e.printStackTrace();
        }
        initComponents();
        this.run = true;
        this.jLabel2.setText(this.client.username);
        this.updateFriendList();
        setLocationRelativeTo(null);
        new Wait4messageFromServer().start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setText("Your Name:");

        jLabel2.setName(""); // NOI18N

        jButton1.setLabel("Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Your Friends:");

        jButton2.setText("Add a Friend");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        jButton3.setText("Message");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jButton3)))
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(54, 54, 54)
                .addComponent(jButton1)
                .addGap(89, 89, 89))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 27, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addGap(17, 17, 17))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int ret = JOptionPane.showConfirmDialog(this, "Do you want to logout", "Confirm", 0);
        if(ret == 0){
            try{
                this.send.writeUTF("close");
            }catch(Exception e){}
            this.setVisible(false);
            this.dispose();
            this.login.setVisible(true);
            this.run = false;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFrame Addfriend_frame = new JFrame("Add a Friend");
        Addfriend_frame.getContentPane();
        Addfriend_frame.setSize(300,85);
        
        JLabel Enter_name = new JLabel("Enter a name: ");
        Dimension size = Enter_name.getPreferredSize();
        Enter_name.setBounds(10, 10, size.width, size.height);
        
        JTextField Name = new JTextField();
        Name.setBounds(size.width+10,10,100,30);
        
        JButton Add = new JButton("Add");
        Add.setBounds(size.width+10+100,10,50,30);
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String Fname = Name.getText();
                if(ClientMain.this.client.Friends.indexOf(Fname)!=-1){
                    JOptionPane.showMessageDialog(Addfriend_frame,"This user has been your friend");
                    return;
                }
                if(Fname.equals("")){
                    JOptionPane.showMessageDialog(Addfriend_frame,"Please enter a name");
                    return;
                }
                if(Fname.equals(ClientMain.this.client.username)){
                    JOptionPane.showMessageDialog(Addfriend_frame,"Cannot add yourself to friendlist");
                    return;
                }
                try{
                    ClientMain.this.send.writeUTF("GetIPandPort:"+Fname+":Add");
                    ClientMain.this.send.flush();
                }catch(Exception e){
                    e.printStackTrace();
                }
            }
        });
        
        Addfriend_frame.setLayout(null);
        Addfriend_frame.add(Enter_name);
        Addfriend_frame.add(Name);
        Addfriend_frame.add(Add);
        Addfriend_frame.setVisible(true);
        Addfriend_frame.setLocation(this.jButton2.getLocationOnScreen().x+25, (this.jButton2.getLocationOnScreen().y - 30));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String name;
        if((name = this.jList1.getSelectedValue()) == null){
            JOptionPane.showMessageDialog(this,"Choose a friend to message ");
            return;
        }
        try{
            this.send.writeUTF("GetIPandPort:"+name);
            this.send.flush();
        }catch(Exception e){
            System.out.println("Fail to get " + name + " info from server");
            return;
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed
    
    void updateFriendList(){
        jList1.setModel(this.client.Friends);
        this.jScrollPane1.setViewportView(this.jList1);
    }
    
      
    class Wait4messageFromServer extends Thread{
        public void run(){
            while(ClientMain.this.run){
                try{
                    String response = ClientMain.this.receive.readUTF();
                    System.out.println(response);
                    if(response.contains("Response4getIPandPort")){
                        if(response.contains("Not found")){
                            JOptionPane.showMessageDialog(ClientMain.this,"This user does not exist");
                            continue;
                        }
                        if(response.contains("Offline")){
                             JOptionPane.showMessageDialog(ClientMain.this,"This user currently offline");
                            continue;
                        }
                        String[] split = response.split(":");
                        int port = Integer.parseInt(split[2]);
                        String ip = split[1];
                        if(response.contains("Add")){
                            Socket socket = new Socket(InetAddress.getByName(ip),port);
                            DataOutputStream send = new DataOutputStream(socket.getOutputStream());
                            DataInputStream receive = new DataInputStream(socket.getInputStream());
                            send.writeUTF("Friend request from:"+ClientMain.this.client.username);
                            send.flush();
                            String name = split[3];
                            String res = receive.readUTF();
                            if(res.contains("decline")){
                                JOptionPane.showMessageDialog(ClientMain.this,name +" decline your request");
                                continue;
                            }
                            ClientMain.this.client.Friends.addElement(name);
                            ClientMain.this.updateFriendList();
                            continue;
                        }
                        MessageGUI Message = new MessageGUI(ip,port,split[3],ClientMain.this.client.username,ClientMain.this);
                        Message.setVisible(true);
                        continue;
                    }
                    if(response.contains("Friend request from")){
                        String[] split = response.split(":");
                        int ret = JOptionPane.showConfirmDialog(ClientMain.this,split[1],"Confirm",0);
                        if(ret == 0){
                            ClientMain.this.send.writeUTF(split[0]+":Add:Accept");
                            ClientMain.this.send.flush();
                            continue;
                        }
                        ClientMain.this.send.writeUTF("Add:decline");
                        ClientMain.this.send.flush();
                    }
                }catch(Exception e){}
            }
        }
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

